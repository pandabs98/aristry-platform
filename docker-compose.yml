version: "3.8"

services:
  postgres:
    image: postgres:15
    container_name: artistry-postgres
    environment:
      POSTGRES_USER: dev
      POSTGRES_PASSWORD: devpass
      POSTGRES_DB: usersdb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dev -d usersdb"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  mongo:
    image: mongo
    container_name: artistry-mongo
    ports:
      - "27017:27017"
    command: ["--replSet", "rs0", "--bind_ip_all"]
    volumes:
      - mongo-data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--quiet", "--eval", "db.adminCommand('ping').ok"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 20s

  mongo-init:
    image: mongo
    container_name: artistry-mongo-init
    depends_on:
      mongo:
        condition: service_healthy
    command: >
      bash -c "
        echo 'Waiting for MongoDB...';
        sleep 5;
        mongosh --host mongo --eval \"
          var config = { _id: 'rs0', members: [ { _id: 0, host: 'mongo:27017' } ] };
          try {
            rs.initiate(config, { force: true });
          } catch (e) {
            if (e.codeName !== 'AlreadyInitialized') {
              throw e;
            }
          }
        \"
      "
    restart: "no"

  backend:
    build: ./backend
    container_name: artistry-backend
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
      mongo:
        condition: service_healthy
      mongo-init:
        condition: service_completed_successfully
    environment:
      DATABASE_URL_MONGO: mongodb://mongo:27017/artistry_mongodb?replicaSet=rs0
      DATABASE_URL_POSTGRES: postgresql://dev:devpass@postgres:5432/usersdb?schema=public
      PORT: 5000

  frontend:
    build: ./frontend
    container_name: artistry-frontend
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_started
    environment:
      NEXT_PUBLIC_BACKEND_URL: http://localhost:5000/api/v1

volumes:
  pgdata:
  mongo-data:
