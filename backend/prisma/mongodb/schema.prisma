// generator client {
//   provider = "prisma-client-js"
//   output   = "../../generated/mongo-client"
// }

generator client {
  provider      = "prisma-client-js"
  output        = "../../generated/mongo-client/index.js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}





datasource db {
  provider = "mongodb"
  url      = env("MONGO_URL")
}

model User {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  username String
  comments Comment[] @relation("UserComments")
  contents Content[] @relation("UserContents")
}

model Content {
  id        String        @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  body      String
  type      ContentType
  status    ContentStatus
  authorId  String // stored as plain string
  author    User?         @relation("UserContents", fields: [authorId], references: [id])
  likes     String[]      @default([])
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
}

model Comment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  text      String
  contentId String // stored as plain string
  userId    String
  user      User     @relation("UserComments", fields: [userId], references: [id])
  createdAt DateTime @default(now())
}

enum ContentType {
  NOBLE
  POEM
  STORY
  SONG
  FABLE
  PROSE
  EPIC
  LEGEND
  BALLAD
}

enum ContentStatus {
  DRAFT
  PUBLISHED
}
